{"version":3,"sources":["router/router.ts","hooks/reduxHooks.ts","components/common.ts","components/CountryDetal/CountryDetail.styles.ts","components/CountryDetal/CountryDetail.tsx","utils/constants.ts","services/countryService.ts","store/slices/countrySlice.ts","store/slices/themeSlice.ts","components/ToggleThemeBtn/ToggleThemeBtn.styles.ts","components/ToggleThemeBtn/ToggleThemeBtn.tsx","components/Header/Header.styles.ts","components/Header/Header.tsx","components/Layout/Layout.tsx","pages/Detail/Detail.tsx","components/FilterBlock/FilterBlock.styles.ts","components/FilterBlock/FilterBlock.tsx","components/CardsBlock/CardsBlock.styles.ts","components/Card/Card.styles.ts","components/Card/Card.tsx","components/MyLoader/MyLoader.tsx","components/CardsBlock/CardsBlock.tsx","pages/Home/Home.tsx","router/AppRouter.tsx","theme/darkTheme.ts","theme/lightTheme.ts","theme/GlobalStyle.ts","App.tsx","store/store.ts","index.tsx"],"names":["RoutesPath","useAppDispatch","useDispatch","useAppSelector","useSelector","Wrapper","styled","div","Container","Main","main","theme","spacing","DescriptionList","ul","DescriptionItem","li","props","response","breakpoints","desktop","display","Strong","strong","typography","fontWeight","semiBold","SmallLink","Link","borderRadius","boxShadow","BackLink","button","fontSize","lg","H1","h1","isNaN","marginBottom","Country","article","CountryRow","alignItems","CountryCol","CountryImg","img","CountryTitle","h2","extraBold","BtnGroup","CountryDetail","src","flag","alt","name","nativeName","population","region","subregion","capital","topLevelDomain","join","currencies","map","curr","languages","lang","countryBorders","border","to","id","toLowerCase","regions","countryService","fetchAll","axios","get","fetchAllCountries","createAsyncThunk","a","data","countrySlice","createSlice","initialState","countries","filteredCountries","countryDetail","alpha3Code","borders","countryDetailBorders","loading","error","reducers","filterCountries","state","action","payload","filter","country","includes","search","detailCountry","findBorders","findCountry","extraReducers","builder","addCase","pending","rejected","message","fulfilled","actions","selectCountry","themeSlice","toggleTheme","selectTheme","ToggleBtn","ToggleThemeBtn","dispatch","btnTheme","onClick","HeaderBlock","header","colors","secondary","HeaderInner","HeaderLogo","tablet","Header","Layout","children","Detail","useParams","navigate","useNavigate","useEffect","undefined","length","FilterBlockInner","InputHolder","Input","input","primary","light","MySelect","Select","FilterBlock","useState","setSearch","select","setSelect","value","onChange","e","target","placeholder","options","label","setOptions","option","CardsList","CardHolder","NotFound","CardItem","CardImgHolder","CardImg","CardBody","CardTitle","h3","Card","LoaderHolder","Loader","MyLoader","useTheme","CardsBlock","lastCardIndex","setLastCardIndex","observerRef","useRef","callbackFunc","entries","isIntersecting","prev","observer","IntersectionObserver","current","observe","unobserve","item","index","ref","Home","publicRoutes","path","HOME","element","React","createElement","DETAIL","REDIRECT","AppRouter","route","key","darkTheme","body","phone","widescreen","sm","fontFamily","lightTheme","gray","cssSpacing","css","GlobalStyle","createGlobalStyle","App","store","configureStore","reducer","themeReducer","countryReducer","ReactDOM","render","StrictMode","basename","process","document","getElementById"],"mappings":"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","file":"static/js/main.bc6c0021.chunk.js","sourcesContent":["import React from 'react';\r\nimport Detail from '../pages/Detail/Detail';\r\nimport Home from '../pages/Home/Home';\r\nimport { RouteProps } from 'react-router';\r\n\r\nexport enum RoutesPath {\r\n  HOME = '/',\r\n  DETAIL = '/country/:id',\r\n  REDIRECT = '*'\r\n}\r\n\r\nexport const publicRoutes: RouteProps[] = [\r\n  { path: RoutesPath.HOME, element: React.createElement(Home)},\r\n  { path: RoutesPath.DETAIL, element: React.createElement(Detail)},\r\n  { path: RoutesPath.REDIRECT, element: React.createElement(Home)},\r\n];\r\n","import { TypedUseSelectorHook, useDispatch, useSelector } from 'react-redux';\nimport type { RootState, AppDispatch } from '../store/store';\n\n// Use throughout your app instead of plain `useDispatch` and `useSelector`\nexport const useAppDispatch = () => useDispatch<AppDispatch>();\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;\n","import styled from 'styled-components';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport const Wrapper = styled.div`\r\n  position: relative;\r\n  width: 100%;\r\n  min-height: 100vh;\r\n  display: flex;\r\n  flex-direction: column;\r\n  overflow: hidden;\r\n`;\r\n\r\nexport const Container = styled.div`\r\n  max-width: 1260px;\r\n  padding: 0 30px;\r\n  margin: 0 auto;\r\n`;\r\n\r\nexport const Main = styled.main`\r\n  flex-grow: 1;\r\n  padding: ${({ theme }) => theme.spacing[4]} 0;\r\n`;\r\n\r\nexport const DescriptionList = styled.ul``;\r\n\r\ninterface DescriptionItemProps {\r\n  response?: boolean;\r\n}\r\n\r\nexport const DescriptionItem = styled.li<DescriptionItemProps>`\r\n  margin-bottom: 10px;\r\n  display: ${props => (props.response ? 'block' : 'flex')};\r\n  align-items: center;\r\n\r\n  @media (min-width: ${({ theme }) => theme.breakpoints.desktop}) {\r\n    display: flex;\r\n  }\r\n\r\n  Strong {\r\n    margin-right: ${props => (props.response ? '0' : '5px')};\r\n    margin-bottom: ${props => (props.response ? '10px' : '0')};\r\n\r\n    ${props => props.response && {\r\n      display: 'block',\r\n    }}\r\n\r\n    @media (min-width: ${({ theme }) => theme.breakpoints.desktop}) {\r\n      margin-bottom: 0;\r\n      margin-right: 5px;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const Strong = styled.strong`\r\n  font-weight: ${({ theme }) => theme.typography.fontWeight.semiBold};\r\n`;\r\n\r\nexport const SmallLink = styled(Link)`\r\n  margin: 5px 5px 5px 0;\r\n  padding: 5px 15px;\r\n  display: inline-flex;\r\n  align-items: center;\r\n  border: 0;\r\n  border-radius: ${({ theme }) => theme.borderRadius};\r\n  box-shadow: ${({ theme }) => theme.boxShadow};\r\n  color: currentColor;\r\n  text-decoration: none;\r\n`;\r\n\r\nexport const BackLink = styled.button`\r\n  min-width: 100px;\r\n  margin-bottom: ${({ theme }) => theme.spacing[4]};\r\n  padding: 5px 15px;\r\n  display: inline-flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  border: 0;\r\n  border-radius: ${({ theme }) => theme.borderRadius};\r\n  box-shadow: ${({ theme }) => theme.boxShadow};\r\n  color: currentColor;\r\n  text-decoration: none;\r\n  font-size: ${({ theme }) => theme.typography.fontSize.lg};\r\n  background-color: transparent;\r\n  font-weight: ${({ theme }) => theme.typography.fontWeight.semiBold};\r\n  cursor: pointer;\r\n\r\n  > svg {\r\n    width: 18px;\r\n    height: 18px;\r\n    margin-right: 5px;\r\n  }\r\n`;\r\n\r\ninterface H1Props {\r\n  marginBottom?: number;\r\n}\r\nexport const H1 = styled.h1<H1Props>`\r\n  margin-bottom: ${(props) => !isNaN(props.marginBottom as number) ? props.marginBottom : props.theme.spacing[3]};\r\n`;","import styled from 'styled-components';\r\nimport { DescriptionList, SmallLink } from './../common';\r\n\r\nexport const Country = styled.article`\r\n  ${DescriptionList} {\r\n    margin-bottom: ${({ theme }) => theme.spacing[4]};\r\n\r\n    @media (min-width: ${({ theme }) => theme.breakpoints.desktop}) {\r\n      margin-bottom: 0;\r\n    }\r\n  }\r\n`;\r\n\r\ninterface CountryRowProps {\r\n  alignItems?: string;\r\n}\r\n\r\nexport const CountryRow = styled.div<CountryRowProps>`\r\n  margin: 0 -${({ theme }) => theme.spacing[3]};\r\n  margin-bottom: ${({ theme }) => theme.spacing[4]};\r\n\r\n  @media (min-width: ${({ theme }) => theme.breakpoints.desktop}) {\r\n    display: flex;\r\n    align-items: ${(props) => props.alignItems ? props.alignItems : 'center'};\r\n  }\r\n`;\r\n\r\nexport const CountryCol = styled.div`\r\n  width: 100%;\r\n  padding: 0 ${({ theme }) => theme.spacing[3]};\r\n\r\n  @media (min-width: ${({ theme }) => theme.breakpoints.desktop}) {\r\n    width: 50%;\r\n  }\r\n`;\r\n\r\nexport const CountryImg = styled.img`\r\n  width: 100%;\r\n  margin-bottom: ${({ theme }) => theme.spacing[4]};\r\n\r\n  @media (min-width: ${({ theme }) => theme.breakpoints.desktop}) {\r\n    margin-bottom: 0;\r\n  }\r\n`;\r\n\r\nexport const CountryTitle = styled.h2`\r\n  margin-bottom: ${({ theme }) => theme.spacing[3]};\r\n  font-size: 24px;\r\n  font-weight: ${({ theme }) => theme.typography.fontWeight.extraBold};\r\n`;\r\n\r\nexport const BtnGroup = styled.div`\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n`;\r\n","import React, { FC } from 'react';\r\nimport { DescriptionItem, DescriptionList, SmallLink, Strong } from '../common';\r\nimport {\r\n  BtnGroup,\r\n  Country,\r\n  CountryCol,\r\n  CountryImg,\r\n  CountryRow,\r\n  CountryTitle,\r\n} from './CountryDetail.styles';\r\n\r\ninterface CountryDetailProps extends Country {\r\n  countryBorders: Array<{ id: string; name: string }>;\r\n}\r\n\r\nconst CountryDetail: FC<CountryDetailProps> = props => {\r\n  return (\r\n    <Country>\r\n      <CountryRow>\r\n        <CountryCol>\r\n          <CountryImg src={props.flag} alt={props.name} />\r\n        </CountryCol>\r\n        <CountryCol>\r\n          <CountryTitle>{props.name}</CountryTitle>\r\n          <CountryRow alignItems=\"flex-start\">\r\n            <CountryCol>\r\n              <DescriptionList>\r\n                <DescriptionItem>\r\n                  <Strong>Native Name:</Strong>\r\n                  {props.nativeName}\r\n                </DescriptionItem>\r\n                <DescriptionItem>\r\n                  <Strong>Population:</Strong>\r\n                  {props.population}\r\n                </DescriptionItem>\r\n                <DescriptionItem>\r\n                  <Strong>Region:</Strong>\r\n                  {props.region}\r\n                </DescriptionItem>\r\n                <DescriptionItem>\r\n                  <Strong>Sub Region:</Strong>\r\n                  {props.subregion}\r\n                </DescriptionItem>\r\n                <DescriptionItem>\r\n                  <Strong>Capital:</Strong>\r\n                  {props.capital}\r\n                </DescriptionItem>\r\n              </DescriptionList>\r\n            </CountryCol>\r\n            <CountryCol>\r\n              <DescriptionList>\r\n                <DescriptionItem>\r\n                  <Strong>Top Level Domain:</Strong>\r\n                  {props.topLevelDomain?.join(', ')}\r\n                </DescriptionItem>\r\n                <DescriptionItem>\r\n                  <Strong>Currencies:</Strong>\r\n                  {props.currencies?.map(curr => curr.name).join(', ')}\r\n                </DescriptionItem>\r\n                <DescriptionItem>\r\n                  <Strong>Languages:</Strong>\r\n                  {props.languages?.map(lang => lang.name).join(', ')}\r\n                </DescriptionItem>\r\n              </DescriptionList>\r\n            </CountryCol>\r\n          </CountryRow>\r\n          <DescriptionList>\r\n            <DescriptionItem response>\r\n              <Strong>Border Countries:</Strong>\r\n              <BtnGroup>\r\n                {props.countryBorders.map(border => (\r\n                  <SmallLink to={`/country/${border.id.toLowerCase()}`} key={border.id}>\r\n                    {border.name}\r\n                  </SmallLink>\r\n                ))}\r\n              </BtnGroup>\r\n            </DescriptionItem>\r\n          </DescriptionList>\r\n        </CountryCol>\r\n      </CountryRow>\r\n    </Country>\r\n  );\r\n};\r\n\r\nexport default CountryDetail;\r\n","export const countryApi: string = 'https://restcountries.com/v2';\r\n\r\nexport const regions: string[] = [\r\n  'Africa',\r\n  'Americas',\r\n  'Asia',\r\n  'Europe',\r\n  'Oceania',\r\n];","import axios from \"axios\";\r\nimport { countryApi } from './../utils/constants';\r\n\r\nconst countryService = {\r\n  fetchAll() {\r\n    return axios.get<Country[]>(`${countryApi}/all`);\r\n  }\r\n}\r\n\r\nexport default countryService;","import { createAsyncThunk, createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { RootState, AppThunk } from '../store';\nimport countryService from './../../services/countryService';\n\nexport interface CountryState {\n  countries: Country[];\n  filteredCountries: Country[];\n  countryDetail: Country;\n  countryDetailBorders: Array<{ id: string; name: string }>;\n  loading: boolean;\n  error: string;\n}\n\nconst initialState: CountryState = {\n  countries: [],\n  filteredCountries: [],\n  countryDetail: {\n    name: '',\n    capital: '',\n    region: '',\n    population: 0,\n    flag: '',\n    alpha3Code: '',\n    topLevelDomain: [],\n    nativeName: '',\n    subregion: '',\n    currencies: [],\n    languages: [],\n    borders: [],\n  },\n  countryDetailBorders: [],\n  loading: false,\n  error: '',\n};\n\nexport const fetchAllCountries = createAsyncThunk(\n  'country/fetchAllCountries',\n  async () => {\n    const response = await countryService.fetchAll();\n    return response.data;\n  }\n);\n\nexport const countrySlice = createSlice({\n  name: 'country',\n  initialState,\n  reducers: {\n    filterCountries: (state, action: PayloadAction<IFilter>) => {\n      if (action.payload.region.toLowerCase() === 'all') {\n        state.filteredCountries = state.countries.filter(country =>\n          country.name\n            .toLowerCase()\n            .includes(action.payload.search.toLowerCase())\n        );\n      } else {\n        state.filteredCountries = state.countries\n          .filter(\n            country =>\n              country.region.toLowerCase() ===\n              action.payload.region.toLowerCase()\n          )\n          .filter(country =>\n            country.name\n              .toLowerCase()\n              .includes(action.payload.search.toLowerCase())\n          );\n      }\n    },\n    detailCountry: (state, action: PayloadAction<string>) => {\n      const country = state.countries.filter(\n        country =>\n          country.alpha3Code.toLowerCase() === action.payload.toLowerCase()\n      )[0];\n      state.countryDetail = country;\n    },\n    findBorders: (state, action: PayloadAction<string[]>) => {\n      const borders = action.payload.map(id => {\n        const findCountry = state.countries.filter(\n          country => country.alpha3Code.toLowerCase() === id.toLowerCase()\n        )[0];\n        return { id, name: findCountry.name };\n      });\n\n      state.countryDetailBorders = borders;\n    },\n  },\n  extraReducers: builder => {\n    builder\n      .addCase(fetchAllCountries.pending, state => {\n        state.loading = true;\n      })\n      .addCase(fetchAllCountries.rejected, (state, action) => {\n        state.loading = false;\n        state.error = action.error.message as string;\n      })\n      .addCase(\n        fetchAllCountries.fulfilled,\n        (state, action: PayloadAction<Country[]>) => {\n          state.loading = false;\n          state.error = '';\n          state.countries = action.payload;\n          state.filteredCountries = action.payload;\n        }\n      );\n  },\n});\n\nexport const { filterCountries, detailCountry, findBorders } = countrySlice.actions;\n\nexport const selectCountry = (state: RootState) => state.country;\n\nexport default countrySlice.reducer;\n","import { createAsyncThunk, createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { RootState, AppThunk } from '../store';\n\nexport interface ThemeState {\n  theme: 'light' | 'dark';\n}\n\nconst initialState: ThemeState = {\n  theme: 'light'\n}\n\nexport const themeSlice = createSlice({\n  name: 'theme',\n  initialState,\n  reducers: {\n    toggleTheme: (state) => {\n      state.theme = state.theme === 'light' ? 'dark' : 'light';\n    },\n  }\n});\n\nexport const { toggleTheme } = themeSlice.actions;\n\nexport const selectTheme = (state: RootState) => state.theme;\n\nexport default themeSlice.reducer;\n","import styled from 'styled-components';\r\nimport { ThemeState } from './../../store/slices/themeSlice';\r\n\r\ninterface ToggleBtnProps {\r\n  btnTheme: 'light' | 'dark';\r\n}\r\n\r\nexport const ToggleBtn = styled.button<ToggleBtnProps>`\r\n  display: flex;\r\n  align-items: center;\r\n  border: 0;\r\n  background-color: transparent;\r\n  padding: 0;\r\n  color: currentColor;\r\n  font-weight: ${({ theme }) => theme.typography.fontWeight.semiBold};\r\n  cursor: pointer;\r\n\r\n  > svg {\r\n    margin-right: 8px;\r\n  }\r\n`;\r\n","import React from 'react';\r\nimport { useAppSelector } from '../../hooks/reduxHooks';\r\nimport { selectTheme, toggleTheme } from '../../store/slices/themeSlice';\r\nimport { BsMoon, BsSunFill } from 'react-icons/bs';\r\nimport { ToggleBtn } from './ToggleThemeBtn.styles';\r\nimport { useAppDispatch } from './../../hooks/reduxHooks';\r\n\r\nconst ToggleThemeBtn: React.FC = () => {\r\n  const dispatch = useAppDispatch();\r\n  const theme = useAppSelector(selectTheme);\r\n\r\n  return (\r\n    <ToggleBtn btnTheme={theme.theme} onClick={() => dispatch(toggleTheme())}>\r\n      {theme.theme === 'light' ? <BsMoon /> : <BsSunFill />}\r\n      {theme.theme === 'light' ? 'Dark Mode' : 'Light Mode'}\r\n    </ToggleBtn>\r\n  );\r\n};\r\n\r\nexport default ToggleThemeBtn;\r\n","import styled from 'styled-components';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport const HeaderBlock = styled.header`\r\n  padding: 25px 0;\r\n  background-color: ${({theme}) => theme.colors.secondary};\r\n  box-shadow: ${({theme}) => theme.boxShadow};\r\n`;\r\n\r\nexport const HeaderInner = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n`;\r\n\r\nexport const HeaderLogo = styled(Link)`\r\n  margin: 0;\r\n  font-size: 20px;\r\n  font-weight: ${({theme}) => theme.typography.fontWeight.extraBold};\r\n  cursor: pointer;\r\n  color: currentColor;\r\n  text-decoration: none;\r\n\r\n  @media(min-width: ${({theme}) => theme.breakpoints.tablet}) {\r\n    font-size: 24px;\r\n  }\r\n`;","import React, { FC } from 'react';\r\nimport { Container, H1 } from '../common';\r\nimport ToggleThemeBtn from '../ToggleThemeBtn/ToggleThemeBtn';\r\nimport { HeaderBlock, HeaderInner, HeaderLogo } from './Header.styles';\r\n\r\nconst Header: FC = () => {\r\n  return (\r\n    <HeaderBlock>\r\n      <Container>\r\n        <HeaderInner>\r\n          <H1 marginBottom={0}>\r\n            <HeaderLogo to='/'>Where in the world?</HeaderLogo>\r\n          </H1>\r\n          <ToggleThemeBtn />\r\n        </HeaderInner>\r\n      </Container>\r\n    </HeaderBlock>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React, { FC } from 'react';\r\nimport Header from '../Header/Header';\r\nimport { Container, Main, Wrapper } from './../common';\r\n\r\nconst Layout: FC = ({ children }) => {\r\n  return (\r\n    <Wrapper>\r\n      <Header />\r\n      <Main>\r\n        <Container>{children}</Container>\r\n      </Main>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default Layout;\r\n","import React, { FC, useEffect, useState } from 'react';\r\nimport { useParams, useNavigate } from 'react-router';\r\nimport { BackLink } from '../../components/common';\r\nimport CountryDetail from '../../components/CountryDetal/CountryDetail';\r\nimport { detailCountry, findBorders } from '../../store/slices/countrySlice';\r\nimport Layout from './../../components/Layout/Layout';\r\nimport { useAppDispatch, useAppSelector } from './../../hooks/reduxHooks';\r\nimport { selectCountry } from './../../store/slices/countrySlice';\r\nimport { BsArrowLeft } from 'react-icons/bs';\r\n\r\nconst Detail: FC = () => {\r\n  const { id } = useParams();\r\n  const dispatch = useAppDispatch();\r\n  const { countryDetail, countryDetailBorders, countries } =\r\n    useAppSelector(selectCountry);\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    dispatch(detailCountry(id as string));\r\n  }, [id, countries]);\r\n\r\n  useEffect(() => {\r\n    if (countryDetail !== undefined && countryDetail.borders?.length) {\r\n      dispatch(findBorders((countryDetail as Country).borders as string[]));\r\n    }\r\n  }, [countryDetail]);\r\n\r\n  return (\r\n    <Layout>\r\n      <BackLink onClick={() => navigate(-1)}>\r\n        <BsArrowLeft />\r\n        Back\r\n      </BackLink>\r\n      <CountryDetail\r\n        {...(countryDetail as Country)}\r\n        countryBorders={countryDetailBorders}\r\n      />\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default Detail;\r\n","import styled from 'styled-components';\r\nimport Select from 'react-select';\r\n\r\nexport const FilterBlockInner = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: flex-start;\r\n\r\n  @media (min-width: ${({ theme }) => theme.breakpoints.tablet}) {\r\n    flex-direction: row;\r\n    align-items: center;\r\n    justify-content: space-between;\r\n  }\r\n`;\r\n\r\nexport const InputHolder = styled.div`\r\n  position: relative;\r\n  max-width: 350px;\r\n  width: 100%;\r\n  margin-bottom: ${({ theme }) => theme.spacing[4]};\r\n\r\n  > svg {\r\n    position: absolute;\r\n    top: 50%;\r\n    left: 20px;\r\n    transform: translateY(-50%);\r\n    pointer-events: none;\r\n  }\r\n`;\r\n\r\nexport const Input = styled.input`\r\n  width: 100%;\r\n  padding: 5px 20px 5px 50px;\r\n  height: ${({ theme }) => theme.spacing[4]};\r\n  background-color: ${({ theme }) => theme.colors.secondary};\r\n  color: ${({ theme }) => theme.colors.primary};\r\n  border: 0;\r\n  border-radius: ${({ theme }) => theme.borderRadius};\r\n  box-shadow: ${({ theme }) => theme.boxShadow};\r\n  font-weight: ${({ theme }) => theme.typography.fontWeight.semiBold};\r\n\r\n  &::placeholder {\r\n    color: ${({ theme }) => theme.colors.primary};\r\n    font-weight: ${({ theme }) => theme.typography.fontWeight.light};\r\n  }\r\n`;\r\n\r\nexport const MySelect = styled(Select)`\r\n  margin-bottom: ${({ theme }) => theme.spacing[4]};\r\n  min-width: 200px;\r\n  color: ${({ theme }) => theme.colors.primary};\r\n  font-weight: ${({ theme }) => theme.typography.fontWeight.semiBold};\r\n\r\n  .css-1s2u09g-control {\r\n    height: ${({ theme }) => theme.spacing[4]};\r\n    border: 0;\r\n    border-radius: ${({ theme }) => theme.borderRadius};\r\n    box-shadow: ${({ theme }) => theme.boxShadow};\r\n    background-color: ${({ theme }) => theme.colors.secondary};\r\n  }\r\n\r\n  .css-qc6sy-singleValue {\r\n    color: ${({ theme }) => theme.colors.primary};\r\n  }\r\n\r\n  .css-6j8wv5-Input {\r\n    color: ${({ theme }) => theme.colors.primary};\r\n  }\r\n\r\n  .css-319lph-ValueContainer {\r\n    padding: 5px 20px;\r\n  }\r\n\r\n  .css-1s2u09g-control,\r\n  .css-1pahdxg-control,\r\n  .css-26l3qy-menu {\r\n    background-color: ${({ theme }) => theme.colors.secondary};\r\n    color: ${({ theme }) => theme.colors.primary};\r\n  }\r\n`;\r\n","import React, { FC, useEffect, useState } from 'react';\r\nimport {\r\n  Input,\r\n  InputHolder,\r\n  FilterBlockInner,\r\n  MySelect,\r\n} from './FilterBlock.styles';\r\nimport { BsSearch } from 'react-icons/bs';\r\nimport { useAppDispatch } from './../../hooks/reduxHooks';\r\nimport { filterCountries } from '../../store/slices/countrySlice';\r\nimport { regions } from '../../utils/constants';\r\n\r\nconst FilterBlock: FC = () => {\r\n  const dispatch = useAppDispatch();\r\n  const [search, setSearch] = useState<string>('');\r\n  const [select, setSelect] = useState<string>('all');\r\n\r\n  useEffect(() => {\r\n    const filterObj: IFilter = { region: select, search: search };\r\n    dispatch(filterCountries(filterObj));\r\n  }, [search, select]);\r\n\r\n  const handleSearch = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    setSearch(e.target.value);\r\n  };\r\n\r\n  const handleSelect = (option: any) => {\r\n    setSelect((option as IOptions).value);\r\n    \r\n  }\r\n\r\n  const setOptions = (): IOptions[] => {\r\n    const options: IOptions[] = regions.map(region => ({\r\n      value: region,\r\n      label: region,\r\n    }));\r\n    return [{ value: 'all', label: 'All' }, ...options];\r\n  };\r\n\r\n  return (\r\n    <FilterBlockInner>\r\n      <InputHolder>\r\n        <BsSearch />\r\n        <Input\r\n          value={search}\r\n          onChange={handleSearch}\r\n          placeholder='Search for a country...'\r\n          aria-label='Search for a country'\r\n        />\r\n      </InputHolder>\r\n      <MySelect\r\n        options={setOptions()}\r\n        onChange={handleSelect}\r\n        placeholder='Filter by Region'\r\n        aria-label='Filter by Region'\r\n      />\r\n    </FilterBlockInner>\r\n  );\r\n};\r\n\r\nexport default FilterBlock;\r\n","import styled from 'styled-components';\r\n\r\nexport const CardsList = styled.div`\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  margin: 0 -${({ theme }) => theme.spacing[3]};\r\n`;\r\n\r\nexport const CardHolder = styled.div`\r\n  width: 100%;\r\n  max-width: 320px;\r\n  padding: 0 ${({ theme }) => theme.spacing[3]};\r\n  margin: 0 auto;\r\n  margin-bottom: ${({ theme }) => theme.spacing[4]};\r\n\r\n  @media(min-width: ${({theme}) => theme.breakpoints.tablet}) {\r\n    max-width: none;\r\n    margin-left: 0;\r\n    margin-right: 0;\r\n    width: 50%;\r\n  }\r\n\r\n  @media(min-width: ${({theme}) => theme.breakpoints.desktop}) {\r\n    width: 25%;\r\n  }\r\n`;\r\n\r\nexport const NotFound = styled.strong`\r\n  display: block;\r\n  text-align: center;\r\n  font-size: ${({theme}) => theme.typography.fontSize.lg};\r\n  font-weight: ${({theme}) => theme.typography.fontWeight.semiBold};\r\n`;","import styled from 'styled-components';\r\n\r\nexport const CardItem = styled.article`\r\n  min-height: 100%;\r\n  border-radius: ${({ theme }) => theme.borderRadius};\r\n  background-color: ${({ theme }) => theme.colors.secondary};\r\n  box-shadow: ${({ theme }) => theme.boxShadow};\r\n  cursor: pointer;\r\n`;\r\n\r\nexport const CardImgHolder = styled.div`\r\n  position: relative;\r\n  padding-top: 55%;\r\n  border-radius: ${({ theme }) => theme.borderRadius} ${({ theme }) => theme.borderRadius} 0 0;\r\n  overflow: hidden;\r\n`;\r\n\r\nexport const CardImg = styled.img`\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  height: 100%;\r\n  width: 100%;\r\n  object-fit: cover;\r\n`;\r\n\r\nexport const CardBody = styled.div`\r\n  padding: 20px;\r\n  border-radius: 0 0 ${({ theme }) => theme.borderRadius} ${({ theme }) => theme.borderRadius};\r\n`;\r\n\r\nexport const CardTitle = styled.h3`\r\n  margin-bottom: 20px;\r\n  font-size: ${({ theme }) => theme.typography.fontSize.lg};\r\n  font-weight: ${({ theme }) => theme.typography.fontWeight.extraBold};\r\n`;\r\n","import React, { FC } from 'react';\r\nimport { useNavigate } from 'react-router';\r\nimport { DescriptionItem, DescriptionList, Strong } from '../common';\r\nimport {\r\n  CardBody,\r\n  CardImg,\r\n  CardImgHolder,\r\n  CardItem,\r\n  CardTitle,\r\n} from './Card.styles';\r\n\r\nconst Card: FC<Country> = props => {\r\n  const navigate = useNavigate();\r\n\r\n  return (\r\n    <CardItem onClick={() => navigate(`country/${props.alpha3Code.toLowerCase()}`)}>\r\n      <CardImgHolder>\r\n        <CardImg src={props.flag} alt={props.name} />\r\n      </CardImgHolder>\r\n      <CardBody>\r\n        <CardTitle>{props.name}</CardTitle>\r\n        <DescriptionList>\r\n          <DescriptionItem>\r\n            <Strong>Population:</Strong> {props.population}\r\n          </DescriptionItem>\r\n          <DescriptionItem>\r\n            <Strong>Region:</Strong> {props.region}\r\n          </DescriptionItem>\r\n          <DescriptionItem>\r\n            <Strong>Capital:</Strong> {props.capital}\r\n          </DescriptionItem>\r\n        </DescriptionList>\r\n      </CardBody>\r\n    </CardItem>\r\n  );\r\n};\r\n\r\nexport default Card;\r\n","import React, { FC } from 'react';\r\nimport styled, { useTheme } from 'styled-components';\r\n\r\nconst LoaderHolder = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  margin-bottom: ${({ theme }) => theme.spacing[4]};\r\n`;\r\n\r\nconst Loader = styled.strong`\r\n  font-size: 22px;\r\n  font-weight: ${({theme}) => theme.typography.fontWeight.extraBold};\r\n  text-align: center;\r\n`;\r\n\r\nconst MyLoader: FC = () => {\r\n  const theme = useTheme();\r\n\r\n  return (\r\n    <LoaderHolder>\r\n      <Loader>Loading...</Loader>\r\n    </LoaderHolder>\r\n  );\r\n};\r\n\r\nexport default MyLoader;\r\n","import React, { FC, useEffect, useRef, useState } from 'react';\r\nimport { CardHolder, CardsList, NotFound } from './CardsBlock.styles';\r\nimport { useAppSelector } from './../../hooks/reduxHooks';\r\nimport { selectCountry } from './../../store/slices/countrySlice';\r\nimport Card from '../Card/Card';\r\nimport MyLoader from '../MyLoader/MyLoader';\r\n\r\nconst CardsBlock: FC = () => {\r\n  const { filteredCountries, error, loading } = useAppSelector(selectCountry);\r\n  const showCards: number = 12;\r\n  const [lastCardIndex, setLastCardIndex] = useState(11);\r\n  const observerRef = useRef<HTMLDivElement>(null);\r\n\r\n  const callbackFunc: IntersectionObserverCallback = (entries) => {\r\n    const [entry] = entries;\r\n    if (entry.isIntersecting) {\r\n      if (lastCardIndex <= filteredCountries.length) {\r\n        setLastCardIndex(prev => prev + showCards);\r\n      }\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    const observer = new IntersectionObserver(callbackFunc, {});\r\n    if (observerRef.current) observer.observe(observerRef.current);\r\n\r\n    return () => {\r\n      if (observerRef.current) observer.unobserve(observerRef.current);\r\n    }\r\n\r\n  }, [filteredCountries, observerRef])\r\n\r\n  return (\r\n    <>\r\n      {loading && <MyLoader />}\r\n      {!filteredCountries.length && <NotFound>No countries...</NotFound>}\r\n      <CardsList>\r\n        {filteredCountries.map(\r\n          (item, index) =>\r\n            index <= lastCardIndex && (\r\n              <CardHolder key={item.alpha3Code}>\r\n                <Card {...item} />\r\n              </CardHolder>\r\n            )\r\n        )}\r\n      </CardsList>\r\n      <div ref={observerRef}></div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CardsBlock;\r\n","import React, { FC } from 'react'\r\nimport Layout from './../../components/Layout/Layout';\r\nimport FilterBlock from './../../components/FilterBlock/FilterBlock';\r\nimport CardsBlock from '../../components/CardsBlock/CardsBlock';\r\n\r\nconst Home: FC = () => {\r\n  return (\r\n    <Layout>\r\n      <FilterBlock/>\r\n      <CardsBlock/>\r\n    </Layout>\r\n  )\r\n}\r\n\r\nexport default Home\r\n","import React, { FC } from 'react'\r\nimport { Routes, Route } from 'react-router-dom'\r\nimport { publicRoutes } from './router'\r\n\r\nconst AppRouter: FC = () => {\r\n  return (\r\n    <Routes>\r\n      {publicRoutes.map(route => (\r\n        <Route {...route } key={route.path}/>\r\n      ))}\r\n    </Routes>\r\n  )\r\n}\r\n\r\nexport default AppRouter\r\n","import { DefaultTheme } from 'styled-components';\r\n\r\nexport const darkTheme: DefaultTheme = {\r\n  spacing: {\r\n    0: '0',\r\n    1: '8px',\r\n    2: '16px',\r\n    3: '20px',\r\n    4: '40px'\r\n  },\r\n  borderRadius: '4px',\r\n  colors: {\r\n    body: 'hsl(207, 26%, 17%)',\r\n    primary: 'hsl(0, 0%, 100%)',\r\n    secondary: 'hsl(209, 23%, 22%)',\r\n  },\r\n  breakpoints: {\r\n    phone: '480px',\r\n    tablet: '768px',\r\n    desktop: '1024px',\r\n    widescreen: '1200px',\r\n  },\r\n  typography: {\r\n    fontSize: {\r\n      sm: '14px',\r\n      lg: '16px',\r\n    },\r\n    fontWeight: {\r\n      light: '300',\r\n      semiBold: '600',\r\n      extraBold: '800',\r\n    },\r\n    fontFamily: '\"Nunito Sans\", sans-serif',\r\n  },\r\n  boxShadow: '0 0 4px rgba(0,0,0,0.5)'\r\n};\r\n","import { DefaultTheme } from 'styled-components';\r\n\r\nexport const lightTheme: DefaultTheme = {\r\n  spacing: {\r\n    0: '0',\r\n    1: '8px',\r\n    2: '16px',\r\n    3: '20px',\r\n    4: '40px'\r\n  },\r\n  borderRadius: '4px',\r\n  colors: {\r\n    body: 'hsl(0, 0%, 98%)',\r\n    primary: 'hsl(200, 15%, 8%)',\r\n    secondary: 'hsl(0, 0%, 100%)',\r\n    gray: 'hsl(0, 0%, 52%)',\r\n  },\r\n  breakpoints: {\r\n    phone: '480px',\r\n    tablet: '768px',\r\n    desktop: '1024px',\r\n    widescreen: '1200px',\r\n  },\r\n  typography: {\r\n    fontSize: {\r\n      sm: '14px',\r\n      lg: '16px',\r\n    },\r\n    fontWeight: {\r\n      light: '300',\r\n      semiBold: '600',\r\n      extraBold: '800',\r\n    },\r\n    fontFamily: '\"Nunito Sans\", sans-serif',\r\n  },\r\n  boxShadow: '0 0 4px rgba(0,0,0,0.5)'\r\n};\r\n","import { createGlobalStyle, css } from 'styled-components';\r\n\r\nexport const cssSpacing = css`\r\n  margin: 0 0 ${({ theme }) => theme.spacing[2]};\r\n\r\n  &:last-child {\r\n    margin-bottom: 0;\r\n  }\r\n`;\r\n\r\nexport const GlobalStyle = createGlobalStyle`\r\n  *, *::before, *::after {\r\n    padding: 0;\r\n    margin: 0;\r\n    box-sizing: border-box;\r\n    font-family: ${({theme}) => theme.typography.fontFamily};\r\n    font-size: ${({theme}) => theme.typography.fontSize.sm};\r\n  }\r\n  body {\r\n    margin: 0;\r\n    background-color: ${({ theme }) => theme.colors.body};\r\n    color: ${({ theme }) => theme.colors.primary};\r\n    font-size: ${({theme}) => theme.typography.fontSize.sm};\r\n    font-family: ${({theme}) => theme.typography.fontFamily};\r\n    font-weight: ${({theme}) => theme.typography.fontWeight.light};\r\n  };\r\n\r\n  h1,h2,h3,h4,h5,h6 {\r\n    ${cssSpacing}\r\n  };\r\n\r\n  p {\r\n    ${cssSpacing}\r\n  }\r\n\r\n  img {\r\n    display: inline-block;\r\n    vertical-align: top;\r\n    max-width: 100%;\r\n    height: auto;\r\n  }\r\n`;\r\n\r\n","import React, { useEffect, useState } from 'react';\nimport { ThemeProvider } from 'styled-components';\nimport { useAppSelector, useAppDispatch } from './hooks/reduxHooks';\nimport AppRouter from './router/AppRouter';\nimport { fetchAllCountries } from './store/slices/countrySlice';\nimport { selectTheme } from './store/slices/themeSlice';\nimport { darkTheme, lightTheme, GlobalStyle } from './theme';\n\nfunction App() {\n  const dispatch = useAppDispatch();\n  const theme = useAppSelector(selectTheme);\n  \n  useEffect(() => {\n    dispatch(fetchAllCountries());\n  }, [])\n\n  return (\n    <ThemeProvider theme={theme.theme === 'light' ? lightTheme : darkTheme}>\n      <GlobalStyle />\n      <AppRouter />\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","import { configureStore, ThunkAction, Action } from '@reduxjs/toolkit';\nimport themeReducer from './slices/themeSlice';\nimport countryReducer from './slices/countrySlice';\n\nexport const store = configureStore({\n  reducer: {\n    theme: themeReducer,\n    country: countryReducer\n  },\n});\n\nexport type AppDispatch = typeof store.dispatch;\nexport type RootState = ReturnType<typeof store.getState>;\nexport type AppThunk<ReturnType = void> = ThunkAction<\n  ReturnType,\n  RootState,\n  unknown,\n  Action<string>\n>;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport { store } from './store/store';\r\nimport { Provider } from 'react-redux';\r\nimport '@csstools/normalize.css';\r\nimport { BrowserRouter } from 'react-router-dom';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <BrowserRouter basename={process.env.PUBLIC_URL}>\r\n        <App />\r\n      </BrowserRouter>\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}